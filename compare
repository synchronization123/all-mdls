import pandas as pd
from openpyxl import load_workbook
from openpyxl.styles import PatternFill, Alignment, Border, Side
from openpyxl.utils import get_column_letter
from datetime import datetime
import tkinter as tk
from tkinter import messagebox

def process_files():
    try:
        csv_file = 'dailycount.csv'
        excel_file = 'project.xlsx'

        # Step 1: Load and clean CSV
        df_csv = pd.read_csv(csv_file)
        df_csv.drop(df_csv.columns[[2, 3]], axis=1, inplace=True)
        df_csv.columns = ['Project', 'Count']

        # Step 2: Load Excel
        df_excel = pd.read_excel(excel_file)

        # Step 3: Add today's date column with counts
        today_str = datetime.today().strftime('%d-%B-%Y')
        df_excel[today_str] = df_excel['Project'].map(df_csv.set_index('Project')['Count']).fillna(0).astype(int)

        # Step 4: Save Excel without formatting
        df_excel.to_excel(excel_file, index=False)

        # Step 5: Open Excel for formatting
        wb = load_workbook(excel_file)
        ws = wb.active

        # Prepare styles
        green_fill = PatternFill(start_color="C6EFCE", end_color="C6EFCE", fill_type="solid")
        yellow_fill = PatternFill(start_color="FFFF00", end_color="FFFF00", fill_type="solid")
        center_align = Alignment(horizontal="center", vertical="center")
        thin_border = Border(
            left=Side(style='thin'),
            right=Side(style='thin'),
            top=Side(style='thin'),
            bottom=Side(style='thin')
        )

        # Step 6: Highlight all 0s in date columns and apply border
        for row in range(1, ws.max_row + 1):
            for col in range(1, ws.max_column + 1):
                cell = ws.cell(row=row, column=col)
                if isinstance(cell.value, int) and cell.value == 0 and col >= 3:
                    cell.fill = green_fill
                cell.border = thin_border

        # Step 7: Merge and label names in column A
        def merge_and_label(start_row, end_row, name):
            ws.merge_cells(start_row=start_row, start_column=1, end_row=end_row, end_column=1)
            cell = ws.cell(row=start_row, column=1)
            cell.value = name
            cell.fill = yellow_fill
            cell.alignment = center_align
            cell.border = thin_border
            # Apply border to all rows in merged range
            for row in range(start_row, end_row + 1):
                cell = ws.cell(row=row, column=1)
                cell.border = thin_border

        merge_and_label(2, 12, "dan")
        merge_and_label(13, 22, "sim")
        merge_and_label(23, 32, "kim")

        wb.save(excel_file)

        messagebox.showinfo("Success", f"Updated '{excel_file}' with today's data, highlights, borders, and merged cells.")
    except Exception as e:
        messagebox.showerror("Error", str(e))

# GUI
root = tk.Tk()
root.title("Project Count Updater")

frame = tk.Frame(root, padx=20, pady=20)
frame.pack()

label = tk.Label(frame, text="Click to update 'project.xlsx' using 'dailycount.csv'", font=('Arial', 12))
label.pack(pady=10)

button = tk.Button(frame, text="Run Script", command=process_files, font=('Arial', 12), bg="lightblue")
button.pack(pady=10)

root.mainloop()