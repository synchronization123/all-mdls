const _opensct_api_url = 'https://demo.defectdojo.org/api/v2/engagements/';
const _opensct_users_api = 'https://demo.defectdojo.org/api/v2/users/';
const _opensct_page_size = 20;
let _opensct_engagements = [];
let _opensct_filtered_engagements = [];
let _opensct_users = [];
let _opensct_current_page = 1;

function _opensct_showLoadingModal() {
    document.getElementById('_opensct_loading_modal').style.display = 'flex';
}

function _opensct_hideLoadingModal() {
    document.getElementById('_opensct_loading_modal').style.display = 'none';
}

async function _opensct_fetchUsers() {
    try {
        const response = await fetch(_opensct_users_api);
        const data = await response.json();
        _opensct_users = data.results;
        const assignedToSelect = document.getElementById('_opensct_assigned_to_filter');
        assignedToSelect.innerHTML = '<option value="">Filter by Assigned To</option>';
        _opensct_users.forEach(user => {
            const option = document.createElement('option');
            option.value = user.id;
            option.textContent = `${user.first_name} ${user.last_name}`;
            assignedToSelect.appendChild(option);
        });
    } catch (error) {
        _opensct_showToast('Error fetching users', 'error');
    }
}

async function _opensct_fetchEngagements() {
    try {
        _opensct_showLoadingModal();
        const response = await fetch(_opensct_api_url);
        const data = await response.json();
        _opensct_engagements = data.results;
        _opensct_filtered_engagements = [..._opensct_engagements];
        await _opensct_fetchUsers();
        _opensct_renderCards();
        _opensct_updateTotalCount();
        _opensct_showToast('Engagements loaded successfully', 'success');
    } catch (error) {
        _opensct_showToast('Error fetching engagements', 'error');
    } finally {
        _opensct_hideLoadingModal();
    }
}

function _opensct_getUserName(userId) {
    const user = _opensct_users.find(u => u.id === userId);
    return user ? `${user.first_name} ${user.last_name}` : 'Unassigned';
}

function _opensct_showToast(message, type) {
    const toast = document.createElement('div');
    toast.className = `toast ${type}`;
    toast.textContent = message;
    document.body.appendChild(toast);
    setTimeout(() => toast.classList.add('show'), 100);
    setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => toast.remove(), 300);
    }, 3000);
}

function _opensct_updateTotalCount() {
    const countElement = document.getElementById('_opensct_total_count');
    countElement.textContent = `Total Engagements: ${_opensct_filtered_engagements.length}`;
}

function _opensct_renderCards() {
    const container = document.getElementById('_opensct_card_container');
    container.innerHTML = '';
    const start = (_opensct_current_page - 1) * _opensct_page_size;
    const end = start + _opensct_page_size;
    const paginatedEngagements = _opensct_filtered_engagements.slice(start, end);

    paginatedEngagements.forEach(engagement => {
        const card = document.createElement('div');
        card.className = 'card';
        card.innerHTML = `
            <div>${engagement.id}</div>
            <div>${engagement.title || 'N/A'}</div>
            <div>${engagement.product || 'N/A'}</div>
            <div>${engagement.target_start ? engagement.target_start.split('T')[0] : 'N/A'}</div>
            <div>${engagement.target_end ? engagement.target_end.split('T')[0] : 'N/A'}</div>
            <div>${_opensct_getUserName(engagement.lead)}</div>
            <div>${engagement.status || 'N/A'}</div>
        `;
        container.appendChild(card);
    });

    _opensct_renderPagination(_opensct_filtered_engagements.length);
}

function _opensct_renderPagination(totalItems) {
    const totalPages = Math.ceil(totalItems / _opensct_page_size);
    const pagination = document.getElementById('_opensct_pagination');
    pagination.innerHTML = `
        <button onclick="_opensct_changePage(${_opensct_current_page - 1})" ${_opensct_current_page === 1 ? 'disabled' : ''}>Previous</button>
        <span>Page ${_opensct_current_page} of ${totalPages}</span>
        <button onclick="_opensct_changePage(${_opensct_current_page + 1})" ${_opensct_current_page === totalPages ? 'disabled' : ''}>Next</button>
    `;
}

function _opensct_changePage(page) {
    _opensct_current_page = page;
    _opensct_renderCards();
}

function _opensct_filterTable() {
    const searchInput = document.getElementById('_opensct_search_input').value.toLowerCase();
    const statusFilter = document.getElementById('_opensct_status_filter').value;
    const assignedToFilter = document.getElementById('_opensct_assigned_to_filter').value;

    _opensct_filtered_engagements = _opensct_engagements.filter(engagement => {
        const matchesSearch = engagement.title?.toLowerCase().includes(searchInput) || engagement.product?.toLowerCase().includes(searchInput) || false;
        const matchesStatus = !statusFilter || engagement.status === statusFilter;
        const matchesAssignedTo = !assignedToFilter || engagement.lead === parseInt(assignedToFilter);
        return matchesSearch && matchesStatus && matchesAssignedTo;
    });

    _opensct_current_page = 1;
    _opensct_renderCards();
    _opensct_updateTotalCount();
    _opensct_showToast('Filters applied', 'success');
}

function _opensct_clearFilters() {
    document.getElementById('_opensct_search_input').value = '';
    document.getElementById('_opensct_status_filter').value = '';
    document.getElementById('_opensct_assigned_to_filter').value = '';
    _opensct_filtered_engagements = [..._opensct_engagements];
    _opensct_current_page = 1;
    _opensct_renderCards();
    _opensct_updateTotalCount();
    _opensct_showToast('Filters cleared', 'success');
}

async function _opensct_refreshData() {
    await _opensct_fetchEngagements();
    _opensct_showToast('Data refreshed', 'success');
}

document.addEventListener('DOMContentLoaded', () => {
    if (document.getElementById('open-sct').classList.contains('active')) {
        _opensct_fetchEngagements();
    }

    document.querySelector('.tab[data-tab="open-sct"]').addEventListener('click', () => {
        if (!_opensct_engagements.length) {
            _opensct_fetchEngagements();
        }
    });
});