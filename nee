<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>CRM User Fetcher</title>
</head>
<body>
  <h2>Users from CRM</h2>
  <pre id="userOutput">Loading...</pre>

  <script>
    // Helper to extract CSRF token from a string of HTML
    function extractCsrfToken(html) {
      const match = html.match(/crm\.security\.csrfToken\s*=\s*'([^']+)'/);
      return match ? match[1] : null;
    }

    async function fetchCsrfToken() {
      try {
        const response = await fetch('https://crm-qa.com/crmqa/home#/crm/dashboard/abc.jsp', {
          credentials: 'include',
        });
        const text = await response.text();
        return extractCsrfToken(text);
      } catch (err) {
        console.error('Failed to fetch CSRF token:', err);
        return null;
      }
    }

    async function fetchUsers(csrfToken) {
      try {
        const response = await fetch('https://crm-qa.com/crmqa/rest/General/getusers?limit=20', {
          method: 'GET',
          headers: {
            'X-CSRF-Token': csrfToken,
            'Content-Type': 'application/json'
          },
          credentials: 'include'
        });

        if (!response.ok) throw new Error('Request failed');
        const data = await response.json();
        document.getElementById('userOutput').textContent = JSON.stringify(data, null, 2);
      } catch (err) {
        console.error('Failed to fetch users:', err);
        document.getElementById('userOutput').textContent = 'Error loading users.';
      }
    }

    async function init() {
      const csrfToken = await fetchCsrfToken();
      if (csrfToken) {
        await fetchUsers(csrfToken);
      } else {
        document.getElementById('userOutput').textContent = 'Failed to get CSRF token.';
      }
    }

    init();
  </script>
</body>
</html>